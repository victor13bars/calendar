{"version":3,"sources":["store/reducers/auth/types.ts","utils/rules.ts","hooks/useTypedselector.ts","store/reducers/event/types.ts","api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/action-creators.ts","router/index.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","pages/Login.tsx","utils/date.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","rules","message","required","validator","_","value","isSameOrAfter","moment","Promise","resolve","reject","Error","useTypedSelector","useSelector","EventActionEnum","UserService","axios","get","AuthActionCreators","setUser","user","type","SET_USER","payload","setAuth","auth","SET_AUTH","setError","SET_ERROR","setIsLoading","SET_IS_LOADING","login","username","password","dispatch","a","setTimeout","_getUsers","response","mockUser","data","find","localStorage","setItem","e","logout","removeItem","RouteNames","EventActionCreators","setGuests","guests","SET_GUESTS","setEvents","events","SET_EVENTS","fetchGuests","console","log","createEvent","event","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","filter","ev","author","guest","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setUsername","setPassword","onFinish","style","color","Item","label","name","onChange","target","htmlType","loading","Login","justify","align","className","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","dateCellRender","formatedDate","toDate","currentDayEvent","map","index","description","EventForm","submit","setEvent","selectedDate","quest","Option","Event","modalVisible","setModalVisible","useEffect","onClick","title","visible","footer","onCancel","publicRoutes","path","LOGIN","exact","component","privateRoutes","EVENT","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","span","theme","mode","selectable","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acee7b98.chunk.js","sourcesContent":["import {IUser} from \"../../../models/IUser\";\r\n\r\nexport interface AuthState {\r\n    isAuth: boolean,\r\n    user: IUser\r\n    isLoading: boolean,\r\n    error: string\r\n}\r\n\r\nexport enum AuthActionEnum {\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_USER = 'SET_USER',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_IS_LOADING = 'SET_IS_LOADING'\r\n}\r\n\r\nexport interface SetAuthAction {\r\n    type: AuthActionEnum.SET_AUTH\r\n    payload: boolean\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: AuthActionEnum.SET_USER\r\n    payload: IUser\r\n}\r\n\r\nexport interface SetErrorAction {\r\n    type: AuthActionEnum.SET_ERROR\r\n    payload: string\r\n}\r\n\r\nexport interface SetIsLoadingAction {\r\n    type: AuthActionEnum.SET_IS_LOADING\r\n    payload: boolean\r\n}\r\n\r\nexport type AuthActions =\r\n    SetAuthAction |\r\n    SetErrorAction |\r\n    SetIsLoadingAction |\r\n    SetUserAction","import moment, {Moment} from \"moment\";\r\n\r\nexport const rules = {\r\n    required: (message: string = 'required field') => ({\r\n        required: true,\r\n        message\r\n    }),\r\n    isDateAfter: (message: string = '') => () => ({\r\n        validator(_: any, value: Moment) {\r\n            if (value.isSameOrAfter(moment())) {\r\n                return Promise.resolve()\r\n            }\r\n            return Promise.reject(new Error(message))\r\n        }\r\n    })\r\n\r\n}","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import {IUser} from \"../../../models/IUser\";\r\nimport {IEvent} from \"../../../models/IEvent\";\r\n\r\nexport interface EventState {\r\n    guests: IUser[];\r\n    events: IEvent[]\r\n}\r\n\r\nexport enum EventActionEnum {\r\n    SET_GUESTS = 'SET_GUESTS',\r\n    SET_EVENTS = 'SET_EVENTS'\r\n}\r\n\r\nexport interface SetGuestsAction {\r\n    type: EventActionEnum.SET_GUESTS\r\n    payload: IUser[]\r\n}\r\n\r\nexport interface SetEventsAction {\r\n    type: EventActionEnum.SET_EVENTS\r\n    payload: IEvent[]\r\n}\r\n\r\nexport type EventActions =\r\n    SetEventsAction |\r\n    SetGuestsAction","import axios, {AxiosResponse} from \"axios\";\r\nimport {IUser} from \"../models/IUser\";\r\n\r\nexport default class UserService {\r\n    static async _getUsers(): Promise<AxiosResponse<IUser[]>> {\r\n        return axios.get('./users.json')\r\n    }\r\n}","import {AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction} from \"./types\";\r\nimport {IUser} from \"../../../models/IUser\";\r\nimport {AppDispatch} from \"../../index\";\r\nimport UserService from \"../../../api/UserService\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user: IUser): SetUserAction => ({type: AuthActionEnum.SET_USER, payload: user}),\r\n    setAuth: (auth: boolean): SetAuthAction => ({type: AuthActionEnum.SET_AUTH, payload: auth}),\r\n    setError: (message: string): SetErrorAction => ({type: AuthActionEnum.SET_ERROR, payload: message}),\r\n    setIsLoading: (payload: boolean): SetIsLoadingAction => ({type: AuthActionEnum.SET_IS_LOADING, payload}),\r\n    login: (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(AuthActionCreators.setIsLoading(true))\r\n            setTimeout(async () => {\r\n                const response = await UserService._getUsers()\r\n                const mockUser = response.data.find(user => user.username === username && user.password === password)\r\n                if (mockUser) {\r\n                    localStorage.setItem('auth', 'true')\r\n                    localStorage.setItem('username', mockUser.username)\r\n                    dispatch(AuthActionCreators.setUser(mockUser))\r\n                    dispatch(AuthActionCreators.setAuth(true))\r\n                } else {\r\n                    dispatch(AuthActionCreators.setError('Incorrect username or password'))\r\n                }\r\n                dispatch(AuthActionCreators.setIsLoading(false))\r\n            }, 2000)\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('An error occurred while logging in'))\r\n        }\r\n    },\r\n    logout: () => async (dispatch: AppDispatch) => {\r\n        localStorage.removeItem('auth')\r\n        localStorage.removeItem('username')\r\n        dispatch(AuthActionCreators.setUser({} as IUser))\r\n        dispatch(AuthActionCreators.setAuth(false))\r\n    }\r\n}","import {EventActionEnum, SetEventsAction, SetGuestsAction} from \"./types\";\r\nimport {IUser} from \"../../../models/IUser\";\r\nimport {AppDispatch} from \"../../index\";\r\nimport axios from \"axios\";\r\nimport {IEvent} from \"../../../models/IEvent\";\r\nimport UserService from \"../../../api/UserService\";\r\n\r\nexport const EventActionCreators = {\r\n    setGuests: (guests: IUser[]): SetGuestsAction => ({type: EventActionEnum.SET_GUESTS, payload: guests}),\r\n    setEvents: (events: IEvent[]): SetEventsAction => ({type: EventActionEnum.SET_EVENTS, payload: events}),\r\n\r\n    fetchGuests: () => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await UserService._getUsers()\r\n            dispatch(EventActionCreators.setGuests(response.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    createEvent: (event: IEvent) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            json.push(event)\r\n            dispatch(EventActionCreators.setEvents(json))\r\n            localStorage.setItem('events', JSON.stringify(json))\r\n        } catch (e) {\r\n\r\n        }\r\n    },\r\n    fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem('events') || '[]'\r\n            const json = JSON.parse(events) as IEvent[]\r\n            const currentUserEvents = json.filter(ev => ev.author === username || ev.guest === username)\r\n            dispatch(EventActionCreators.setEvents(currentUserEvents))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport Login from \"../pages/Login\";\r\nimport Event from \"../pages/Event\";\r\n\r\nexport interface IRoute {\r\n    path: string;\r\n    component: React.ComponentType\r\n    exact?: boolean\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = '/login',\r\n    EVENT = '/'\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n    {path: RouteNames.LOGIN, exact: true, component: Login}\r\n]\r\n\r\nexport const privateRoutes: IRoute[] = [\r\n    {path: RouteNames.EVENT, exact: true, component: Event}\r\n]","import {AuthActionCreators} from \"./auth/action-creators\";\r\nimport {EventActionCreators} from \"./event/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...EventActionCreators\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {AppDispatch} from \"../store\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {allActionCreators} from \"../store/reducers/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(allActionCreators, dispatch)\r\n}","import React, {FC, useState} from 'react';\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {rules} from \"../utils/rules\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AuthActionCreators} from \"../store/reducers/auth/action-creators\";\r\nimport {useTypedSelector} from \"../hooks/useTypedselector\";\r\nimport {useActions} from \"../hooks/useActions\";\r\n\r\nconst LoginForm: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {error, isLoading} = useTypedSelector(state => state.auth)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const {login} = useActions()\r\n    const submit = () => {\r\n        login(username, password)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onFinish={submit}\r\n        >\r\n            {error &&\r\n            <div style={{color: 'red'}}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[rules.required('Please input your username!')]}\r\n            >\r\n                <Input\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"Password\"\r\n                rules={[rules.required('Please input your password!')]}\r\n            >\r\n                <Input\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    type={\"password\"}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                    Enter\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, {FC} from 'react';\r\nimport {Card, Layout, Row} from \"antd\";\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nconst Login: FC = () => {\r\n    return (\r\n        <Layout>\r\n            <Row justify='center' align='middle' className='h100'>\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n            </Row>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;","export const formatDate = (date: Date): string => {\r\n    console.log(date)\r\n    const year = date.getFullYear()\r\n    const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\r\n    console.log(year)\r\n    console.log(month)\r\n    console.log(day)\r\n    return `${year}.${month}.${day}`\r\n}","import React, {FC} from 'react';\r\nimport {Calendar} from \"antd\";\r\nimport {IEvent} from \"../models/IEvent\";\r\nimport {Moment} from \"moment\";\r\nimport {formatDate} from \"../utils/date\";\r\n\r\ninterface EventCalendarProps {\r\n    events: IEvent[];\r\n}\r\n\r\nconst EventCalendar: FC<EventCalendarProps> = ({events}) => {\r\n    function dateCellRender(value: Moment) {\r\n        const formatedDate = formatDate(value.toDate())\r\n        const currentDayEvent = events.filter(ev => ev.date === formatedDate)\r\n        return (\r\n            <div>\r\n                {currentDayEvent.map((ev, index) =>\r\n                    <div key={index}>{ev.description}</div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Calendar\r\n            dateCellRender={dateCellRender}\r\n        />\r\n    );\r\n};\r\n\r\nexport default EventCalendar;","import React, {FC, useState} from 'react';\r\nimport {Button, DatePicker, Form, Input, Row, Select} from \"antd\";\r\nimport {rules} from \"../utils/rules\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {IEvent} from \"../models/IEvent\";\r\nimport {Moment} from \"moment\";\r\nimport {formatDate} from \"../utils/date\";\r\nimport {useTypedSelector} from \"../hooks/useTypedselector\";\r\n\r\ninterface EventFormProps {\r\n    guests: IUser[],\r\n    submit: (event: IEvent) => void\r\n}\r\n\r\nconst EventForm: FC<EventFormProps> = ({guests, submit}) => {\r\n\r\n    const {username} = useTypedSelector(state => state.auth.user)\r\n    const [event, setEvent] = useState<IEvent>({\r\n        author: '',\r\n        date: '',\r\n        description: '',\r\n        guest: ''\r\n    } as IEvent)\r\n\r\n    const selectedDate = (date: Moment | null) => {\r\n        if (date) {\r\n            setEvent({...event, date: formatDate(date.toDate())})\r\n        }\r\n    }\r\n    const submitForm = () => {\r\n        submit({...event, author: username})\r\n        console.log({...event, author: username})\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onFinish={submitForm}\r\n        >\r\n            <Form.Item\r\n                label=\"Description event\"\r\n                name=\"description\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Input\r\n                    value={event.description}\r\n                    onChange={(e) => setEvent({...event, description: e.target.value})}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Date event\"\r\n                name=\"date\"\r\n                rules={[rules.required(),rules.isDateAfter('You cannot create an event in the past')]}\r\n            >\r\n                <DatePicker\r\n                    onChange={(date) => selectedDate(date)}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label='Select a guest'\r\n                name='guest'\r\n                rules={[rules.required()]}\r\n            >\r\n                <Select onChange={(guest: string) => setEvent({...event, guest})}>\r\n                    {guests.map(quest =>\r\n                        <Select.Option\r\n                            key={quest.username}\r\n                            value={quest.username}\r\n                        >\r\n                            {quest.username}\r\n                        </Select.Option>\r\n                    )}\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify='end'>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        Create\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EventForm;","import React, {FC, useEffect, useState} from 'react';\r\nimport {Button, Layout, Modal, Row} from \"antd\";\r\nimport EventCalendar from \"../components/EventCalendar\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport {useActions} from \"../hooks/useActions\";\r\nimport {useTypedSelector} from \"../hooks/useTypedselector\";\r\nimport {IEvent} from \"../models/IEvent\";\r\n\r\nconst Event: FC = () => {\r\n    const {fetchGuests, createEvent, fetchEvents} = useActions()\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const {guests, events} = useTypedSelector(state => state.event)\r\n    const {user} = useTypedSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        fetchGuests()\r\n        fetchEvents(user.username)\r\n    }, [])\r\n\r\n    const addNewEvent = (event: IEvent) => {\r\n        setModalVisible(false)\r\n        createEvent(event)\r\n    }\r\n    return (\r\n            <Layout>\r\n                <EventCalendar events={events}/>\r\n                <Row justify='center'>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => setModalVisible(true)}\r\n                    >\r\n                        Add Event\r\n                    </Button>\r\n                </Row>\r\n                <Modal\r\n                    title='Add Event'\r\n                    visible={modalVisible}\r\n                    footer={null}\r\n                    onCancel={() => setModalVisible(false)}\r\n                >\r\n                    <EventForm\r\n                        guests={guests}\r\n                        submit={addNewEvent}\r\n                    />\r\n                </Modal>\r\n            </Layout>\r\n    );\r\n};\r\n\r\nexport default Event;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes, RouteNames} from \"../router\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\nimport {useTypedSelector} from \"../hooks/useTypedselector\";\r\n\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth} = useTypedSelector(state => state.auth)\r\n\r\n    return (\r\n        isAuth ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route path={route.path}\r\n                           exact={route.exact}\r\n                           component={route.component}\r\n                           key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to={RouteNames.EVENT}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route path={route.path}\r\n                           exact={route.exact}\r\n                           component={route.component}\r\n                           key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {FC} from 'react';\r\nimport {Col, Layout, Menu, Row} from 'antd'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {RouteNames} from \"../router\";\r\nimport {useTypedSelector} from \"../hooks/useTypedselector\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AuthActionCreators} from \"../store/reducers/auth/action-creators\";\r\nimport {useActions} from \"../hooks/useActions\";\r\n\r\nconst Navbar: FC = () => {\r\n    const router = useHistory()\r\n    const {isAuth, user} = useTypedSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const {logout} = useActions()\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify='end'>\r\n\r\n                {isAuth\r\n                    ? <>\r\n                        <Col span={2}>\r\n                            <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                                <div style={{color: 'white'}}>\r\n                                    {user.username}\r\n                                </div>\r\n                            </Menu>\r\n                        </Col>\r\n                        <Col span={2}>\r\n                            <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                                <Menu.Item\r\n                                    onClick={logout}\r\n                                    key={\"1\"}\r\n                                >\r\n                                    Logout\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Col>\r\n                    </>\r\n                    :\r\n                    <Col span={2}>\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                            <Menu.Item\r\n                                onClick={() => router.push(RouteNames.LOGIN)}\r\n                                key={\"1\"}\r\n                            >\r\n                                Login\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Layout.Header>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {FC, useEffect} from 'react';\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/Navbar\";\nimport {Layout} from \"antd\";\nimport './App.css'\nimport {useActions} from \"./hooks/useActions\";\nimport {IUser} from \"./models/IUser\";\n\nconst App: FC = () => {\n    const {setAuth, setUser} = useActions()\n    useEffect(() => {\n            if (localStorage.getItem('auth')) {\n                setUser({username: localStorage.getItem('username' || '')} as IUser)\n                setAuth(true)\n            }\n        }\n        , [])\n    return (\n        <Layout>\n            <Navbar/>\n            <Layout.Content>\n                <AppRouter/>\n            </Layout.Content>\n        </Layout>\n    );\n};\n\nexport default App\n","import {AuthActionEnum, AuthActions, AuthState} from \"./types\";\r\nimport {IUser} from \"../../../models/IUser\";\r\n\r\nconst initialState: AuthState = {\r\n    isAuth: false,\r\n    error: '',\r\n    isLoading: false,\r\n    user: {} as IUser\r\n}\r\n\r\nexport default function authReducer(state = initialState, action: AuthActions): AuthState {\r\n    switch (action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return {...state, isAuth: action.payload, isLoading: false}\r\n        case AuthActionEnum.SET_USER:\r\n            return {...state, user: action.payload}\r\n        case AuthActionEnum.SET_ERROR:\r\n            return {...state, error: action.payload, isLoading: false}\r\n        case AuthActionEnum.SET_IS_LOADING:\r\n            return {...state, isLoading: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};","import {EventActionEnum, EventActions, EventState} from \"./types\";\r\n\r\nconst initialState: EventState = {\r\n    events: [],\r\n    guests: []\r\n}\r\n\r\nexport default function EventReducer(state = initialState, action: EventActions): EventState {\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return {...state,guests:action.payload}\r\n        case EventActionEnum.SET_EVENTS:\r\n            return {...state,events:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import auth from './auth'\r\nimport event from './event'\r\n\r\nexport default {\r\n    auth,\r\n    event\r\n\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\nconst rootReducer = combineReducers(reducers)\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}